// <auto-generated />
using System;
using LuanWebsite.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuanWebsite.WebAPI.Migrations
{
    [DbContext(typeof(WebsiteDbContext))]
    [Migration("20251019192357_SeedInitialArticles")]
    partial class SeedInitialArticles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("LuanWebsite.WebAPI.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Programação",
                            Content = "Este é o conteúdo completo do meu primeiro artigo...",
                            CreatedDate = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Meu Primeiro Artigo de Teste"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Frontend JavaScript",
                            Content = "JavaScript puro é a base de tudo no frontend...",
                            CreatedDate = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProjectLink = "https://github.com/D-Luan/documentation-manager",
                            Title = "Aprendendo JavaScript Puro"
                        });
                });

            modelBuilder.Entity("LuanWebsite.WebAPI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArticleLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
